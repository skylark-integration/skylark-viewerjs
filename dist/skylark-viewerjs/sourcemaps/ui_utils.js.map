{"version":3,"sources":["ui_utils.js"],"names":["define","viewerjs","CustomStyle","prefixes","_cache","getProp","propName","element","arguments","length","prefixed","uPropName","style","document","documentElement","charAt","toUpperCase","slice","i","l","setProp","str","prop","this","binarySearchFirstItem","items","condition","minIndex","maxIndex","currentIndex","ProgressBar","id","opts","visible","div","querySelector","bar","parentNode","height","width","units","percent","prototype","updateBar","_indeterminate","classList","add","remove","progressSize","_percent","val","v","min","max","isNaN","Math","setWidth","viewer","scrollbarWidth","offsetWidth","setAttribute","hide","body","show","uiutils","getFileName","url","anchor","indexOf","query","end","substring","lastIndexOf","getOutputScale","ctx","pixelRatio","window","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","sx","sy","scaled","scrollIntoView","spot","parent","offsetParent","offsetY","offsetTop","clientTop","offsetX","offsetLeft","clientLeft","clientHeight","scrollHeight","dataset","_scaleY","_scaleX","undefined","top","left","scrollLeft","scrollTop","console","error","watchScroll","viewAreaElement","callback","debounceScroll","evt","rAF","requestAnimationFrame","currentY","lastY","state","down","_eventHandler","addEventListener","getVisibleElements","scrollEl","views","sortByVisibility","view","currentHeight","viewHeight","percentHeight","currentWidth","bottom","right","clientWidth","ii","push","x","y","first","last","sort","a","b","pc","abs","getPDFFileNameFromURL","reFilename","splitURI","exec","suggestedFilename","decodeURIComponent","e"],"mappings":"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","file":"../ui_utils.js","sourcesContent":["define([\n    \"./viewerjs\"\n],function(viewerjs) {\n  'use strict';\n\n  var CSS_UNITS = 96.0 / 72.0;\n  var DEFAULT_SCALE = 'auto';\n  var UNKNOWN_SCALE = 0;\n  var MAX_AUTO_SCALE = 1.25;\n  var SCROLLBAR_PADDING = 40;\n  var VERTICAL_PADDING = 5;\n\n  // optimised CSS custom property getter/setter\n  var CustomStyle = (function CustomStyleClosure() {\n\n    // As noted on: http://www.zachstronaut.com/posts/2009/02/17/\n    //              animate-css-transforms-firefox-webkit.html\n    // in some versions of IE9 it is critical that ms appear in this list\n    // before Moz\n    var prefixes = ['ms', 'Moz', 'Webkit', 'O'];\n    var _cache = {};\n\n    function CustomStyle() {}\n\n    CustomStyle.getProp = function get(propName, element) {\n      // check cache only when no element is given\n      if (arguments.length === 1 && typeof _cache[propName] === 'string') {\n        return _cache[propName];\n      }\n\n      element = element || document.documentElement;\n      var style = element.style, prefixed, uPropName;\n\n      // test standard property first\n      if (typeof style[propName] === 'string') {\n        return (_cache[propName] = propName);\n      }\n\n      // capitalize\n      uPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n\n      // test vendor specific properties\n      for (var i = 0, l = prefixes.length; i < l; i++) {\n        prefixed = prefixes[i] + uPropName;\n        if (typeof style[prefixed] === 'string') {\n          return (_cache[propName] = prefixed);\n        }\n      }\n\n      //if all fails then set to undefined\n      return (_cache[propName] = 'undefined');\n    };\n\n    CustomStyle.setProp = function set(propName, element, str) {\n      var prop = this.getProp(propName);\n      if (prop !== 'undefined') {\n        element.style[prop] = str;\n      }\n    };\n\n    return CustomStyle;\n  })();\n\n  function getFileName(url) {\n    var anchor = url.indexOf('#');\n    var query = url.indexOf('?');\n    var end = Math.min(\n      anchor > 0 ? anchor : url.length,\n      query > 0 ? query : url.length);\n    return url.substring(url.lastIndexOf('/', end) + 1, end);\n  }\n\n  /**\n   * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n   * @return {Object} The object with horizontal (sx) and vertical (sy)\n                      scales. The scaled property is set to false if scaling is\n                      not required, true otherwise.\n   */\n  function getOutputScale(ctx) {\n    var devicePixelRatio = window.devicePixelRatio || 1;\n    var backingStoreRatio = ctx.webkitBackingStorePixelRatio ||\n                            ctx.mozBackingStorePixelRatio ||\n                            ctx.msBackingStorePixelRatio ||\n                            ctx.oBackingStorePixelRatio ||\n                            ctx.backingStorePixelRatio || 1;\n    var pixelRatio = devicePixelRatio / backingStoreRatio;\n    return {\n      sx: pixelRatio,\n      sy: pixelRatio,\n      scaled: pixelRatio !== 1\n    };\n  }\n\n  /**\n   * Scrolls specified element into view of its parent.\n   * element {Object} The element to be visible.\n   * spot {Object} An object with optional top and left properties,\n   *               specifying the offset from the top left edge.\n   */\n  function scrollIntoView(element, spot) {\n    // Assuming offsetParent is available (it's not available when viewer is in\n    // hidden iframe or object). We have to scroll: if the offsetParent is not set\n    // producing the error. See also animationStartedClosure.\n    var parent = element.offsetParent;\n    var offsetY = element.offsetTop + element.clientTop;\n    var offsetX = element.offsetLeft + element.clientLeft;\n    if (!parent) {\n      console.error('offsetParent is not set -- cannot scroll');\n      return;\n    }\n    while (parent.clientHeight === parent.scrollHeight) {\n      if (parent.dataset._scaleY) {\n        offsetY /= parent.dataset._scaleY;\n        offsetX /= parent.dataset._scaleX;\n      }\n      offsetY += parent.offsetTop;\n      offsetX += parent.offsetLeft;\n      parent = parent.offsetParent;\n      if (!parent) {\n        return; // no need to scroll\n      }\n    }\n    if (spot) {\n      if (spot.top !== undefined) {\n        offsetY += spot.top;\n      }\n      if (spot.left !== undefined) {\n        offsetX += spot.left;\n        parent.scrollLeft = offsetX;\n      }\n    }\n    parent.scrollTop = offsetY;\n  }\n\n  /**\n   * Helper function to start monitoring the scroll event and converting them into\n   * PDF.js friendly one: with scroll debounce and scroll direction.\n   */\n  function watchScroll(viewAreaElement, callback) {\n    var debounceScroll = function debounceScroll(evt) {\n      if (rAF) {\n        return;\n      }\n      // schedule an invocation of scroll for next animation frame.\n      rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n        rAF = null;\n\n        var currentY = viewAreaElement.scrollTop;\n        var lastY = state.lastY;\n        if (currentY !== lastY) {\n          state.down = currentY > lastY;\n        }\n        state.lastY = currentY;\n        callback(state);\n      });\n    };\n\n    var state = {\n      down: true,\n      lastY: viewAreaElement.scrollTop,\n      _eventHandler: debounceScroll\n    };\n\n    var rAF = null;\n    viewAreaElement.addEventListener('scroll', debounceScroll, true);\n    return state;\n  }\n\n  /**\n   * Use binary search to find the index of the first item in a given array which\n   * passes a given condition. The items are expected to be sorted in the sense\n   * that if the condition is true for one item in the array, then it is also true\n   * for all following items.\n   *\n   * @returns {Number} Index of the first array element to pass the test,\n   *                   or |items.length| if no such element exists.\n   */\n  function binarySearchFirstItem(items, condition) {\n    var minIndex = 0;\n    var maxIndex = items.length - 1;\n\n    if (items.length === 0 || !condition(items[maxIndex])) {\n      return items.length;\n    }\n    if (condition(items[minIndex])) {\n      return minIndex;\n    }\n\n    while (minIndex < maxIndex) {\n      var currentIndex = (minIndex + maxIndex) >> 1;\n      var currentItem = items[currentIndex];\n      if (condition(currentItem)) {\n        maxIndex = currentIndex;\n      } else {\n        minIndex = currentIndex + 1;\n      }\n    }\n    return minIndex; /* === maxIndex */\n  }\n\n  /**\n   * Generic helper to find out what elements are visible within a scroll pane.\n   */\n  function getVisibleElements(scrollEl, views, sortByVisibility) {\n    var top = scrollEl.scrollTop, bottom = top + scrollEl.clientHeight;\n    var left = scrollEl.scrollLeft, right = left + scrollEl.clientWidth;\n\n    function isElementBottomBelowViewTop(view) {\n      var element = view.div;\n      var elementBottom =\n        element.offsetTop + element.clientTop + element.clientHeight;\n      return elementBottom > top;\n    }\n\n    var visible = [], view, element;\n    var currentHeight, viewHeight, hiddenHeight, percentHeight;\n    var currentWidth, viewWidth;\n    var firstVisibleElementInd = (views.length === 0) ? 0 :\n      binarySearchFirstItem(views, isElementBottomBelowViewTop);\n\n    for (var i = firstVisibleElementInd, ii = views.length; i < ii; i++) {\n      view = views[i];\n      element = view.div;\n      currentHeight = element.offsetTop + element.clientTop;\n      viewHeight = element.clientHeight;\n\n      if (currentHeight > bottom) {\n        break;\n      }\n\n      currentWidth = element.offsetLeft + element.clientLeft;\n      viewWidth = element.clientWidth;\n      if (currentWidth + viewWidth < left || currentWidth > right) {\n        continue;\n      }\n      hiddenHeight = Math.max(0, top - currentHeight) +\n        Math.max(0, currentHeight + viewHeight - bottom);\n      percentHeight = ((viewHeight - hiddenHeight) * 100 / viewHeight) | 0;\n\n      visible.push({\n        id: view.id,\n        x: currentWidth,\n        y: currentHeight,\n        view: view,\n        percent: percentHeight\n      });\n    }\n\n    var first = visible[0];\n    var last = visible[visible.length - 1];\n\n    if (sortByVisibility) {\n      visible.sort(function(a, b) {\n        var pc = a.percent - b.percent;\n        if (Math.abs(pc) > 0.001) {\n          return -pc;\n        }\n        return a.id - b.id; // ensure stability\n      });\n    }\n    return {first: first, last: last, views: visible};\n  }\n\n  /**\n   * Event handler to suppress context menu.\n   */\n  function noContextMenuHandler(e) {\n    e.preventDefault();\n  }\n\n  /**\n   * Returns the filename or guessed filename from the url (see issue 3455).\n   * url {String} The original PDF location.\n   * @return {String} Guessed PDF file name.\n   */\n  function getPDFFileNameFromURL(url) {\n    var reURI = /^(?:([^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n    //            SCHEME      HOST         1.PATH  2.QUERY   3.REF\n    // Pattern to get last matching NAME.pdf\n    var reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n    var splitURI = reURI.exec(url);\n    var suggestedFilename = reFilename.exec(splitURI[1]) ||\n                             reFilename.exec(splitURI[2]) ||\n                             reFilename.exec(splitURI[3]);\n    if (suggestedFilename) {\n      suggestedFilename = suggestedFilename[0];\n      if (suggestedFilename.indexOf('%') !== -1) {\n        // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n        try {\n          suggestedFilename =\n            reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n        } catch(e) { // Possible (extremely rare) errors:\n          // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n          // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n        }\n      }\n    }\n    return suggestedFilename || 'document.pdf';\n  }\n\n  var ProgressBar = (function ProgressBarClosure() {\n\n    function clamp(v, min, max) {\n      return Math.min(Math.max(v, min), max);\n    }\n\n    function ProgressBar(id, opts) {\n      this.visible = true;\n\n      // Fetch the sub-elements for later.\n      this.div = document.querySelector(id + ' .progress');\n\n      // Get the loading bar element, so it can be resized to fit the viewer.\n      this.bar = this.div.parentNode;\n\n      // Get options, with sensible defaults.\n      this.height = opts.height || 100;\n      this.width = opts.width || 100;\n      this.units = opts.units || '%';\n\n      // Initialize heights.\n      this.div.style.height = this.height + this.units;\n      this.percent = 0;\n    }\n\n    ProgressBar.prototype = {\n\n      updateBar: function ProgressBar_updateBar() {\n        if (this._indeterminate) {\n          this.div.classList.add('indeterminate');\n          this.div.style.width = this.width + this.units;\n          return;\n        }\n\n        this.div.classList.remove('indeterminate');\n        var progressSize = this.width * this._percent / 100;\n        this.div.style.width = progressSize + this.units;\n      },\n\n      get percent() {\n        return this._percent;\n      },\n\n      set percent(val) {\n        this._indeterminate = isNaN(val);\n        this._percent = clamp(val, 0, 100);\n        this.updateBar();\n      },\n\n      setWidth: function ProgressBar_setWidth(viewer) {\n        if (viewer) {\n          var container = viewer.parentNode;\n          var scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n          if (scrollbarWidth > 0) {\n            this.bar.setAttribute('style', 'width: calc(100% - ' +\n                                           scrollbarWidth + 'px);');\n          }\n        }\n      },\n\n      hide: function ProgressBar_hide() {\n        if (!this.visible) {\n          return;\n        }\n        this.visible = false;\n        this.bar.classList.add('hidden');\n        document.body.classList.remove('loadingInProgress');\n      },\n\n      show: function ProgressBar_show() {\n        if (this.visible) {\n          return;\n        }\n        this.visible = true;\n        document.body.classList.add('loadingInProgress');\n        this.bar.classList.remove('hidden');\n      }\n    };\n\n    return ProgressBar;\n  })();\n\n  return viewerjs.uiutils = {\n    CustomStyle,\n    getFileName,\n    getOutputScale,\n    scrollIntoView,\n    watchScroll,\n    binarySearchFirstItem,\n    getVisibleElements,\n    getPDFFileNameFromURL,\n    ProgressBar\n  };\n});"]}