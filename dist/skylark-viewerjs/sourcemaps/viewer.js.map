{"version":3,"sources":["viewer.js"],"names":["define","viewerjs","Viewer","viewerPlugin","parameters","url","aboutDialog","currentPage","scaleChangeTimer","touchTimer","toolbarTouchTimer","self","this","kScrollbarPadding","kMinScale","kMaxScale","kDefaultScale","presentationMode","isFullScreen","initialized","viewerElement","document","getElementById","canvasContainer","overlayNavigator","titlebar","toolbar","pageSwitcher","zoomWidget","scaleSelector","dialogOverlay","toolbarRight","pages","UI_FADE_DURATION","isBlankedOut","blanked","style","display","initializeAboutInformation","aboutDialogCentererTable","aboutDialogCentererCell","aboutButton","pluginName","pluginVersion","pluginURL","version","String","ViewerJS_version","getPluginName","getPluginVersion","getPluginURL","createElement","id","innerHTML","appendChild","className","title","addEventListener","selectScaleOption","value","option","i","options","predefinedValueFound","length","selected","setScale","val","resetAutoSettings","getZoomLevel","setZoomLevel","event","createEvent","initUIEvent","window","scale","dispatchEvent","onScroll","pageNumber","getPageInView","delayedRefresh","milliseconds","clearTimeout","setTimeout","parseScale","maxWidth","maxHeight","parseFloat","textContent","clientWidth","clientHeight","fitToWidth","fitToHeight","fitToPage","isSlideshow","fitSmart","handleFullScreenChange","togglePresentationMode","showOverlayNavigator","showToolbars","classList","add","hideToolbars","remove","toggleToolbars","contains","blankOut","backgroundColor","leaveBlankOut","setButtonClickHandler","buttonId","handler","button","blur","initialize","initialScale","zoom","number","indexOf","documentUrl","documentName","ownerDocument","createTextNode","onLoad","startPage","result","visibility","getPages","showPage","startpage","parseInt","isNaN","onscroll","n","showNextPage","showPreviousPage","download","split","open","toggleFullScreen","elem","exitFullscreen","cancelFullScreen","mozCancelFullScreen","webkitExitFullscreen","webkitCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","overlayCloseButton","onmouseup","oncontextmenu","onmousedown","preventDefault","which","zoomOut","newScale","toFixed","Math","max","zoomIn","min","evt","customScaleOption","round","key","keyCode","shiftKey"],"mappings":"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","file":"../viewer.js","sourcesContent":["define([\n    \"./viewerjs\"\n],function(viewerjs) {\n    /*global document, window*/\n\n    function Viewer(viewerPlugin, parameters) {\n        \"use strict\";\n\n        var self = this,\n            kScrollbarPadding = 40,\n            kMinScale = 0.25,\n            kMaxScale = 4.0,\n            kDefaultScaleDelta = 1.1,\n            kDefaultScale = 'auto',\n            presentationMode = false,\n            isFullScreen = false,\n            initialized = false,\n            url,\n            viewerElement = document.getElementById('viewer'),\n            canvasContainer = document.getElementById('canvasContainer'),\n            overlayNavigator = document.getElementById('overlayNavigator'),\n            titlebar = document.getElementById('titlebar'),\n            toolbar = document.getElementById('toolbarContainer'),\n            pageSwitcher = document.getElementById('toolbarLeft'),\n            zoomWidget = document.getElementById('toolbarMiddleContainer'),\n            scaleSelector = document.getElementById('scaleSelect'),\n            dialogOverlay = document.getElementById('dialogOverlay'),\n            toolbarRight = document.getElementById('toolbarRight'),\n            aboutDialog,\n            pages = [],\n            currentPage,\n            scaleChangeTimer,\n            touchTimer,\n            toolbarTouchTimer,\n            /**@const*/\n            UI_FADE_DURATION = 5000;\n\n        function isBlankedOut() {\n            return (blanked.style.display === 'block');\n        }\n\n        function initializeAboutInformation() {\n            var aboutDialogCentererTable, aboutDialogCentererCell, aboutButton, pluginName, pluginVersion, pluginURL,\n                version;\n\n            version = (String(typeof ViewerJS_version) !== \"undefined\" ? ViewerJS_version : \"From Source\");\n            if (viewerPlugin) {\n                pluginName = viewerPlugin.getPluginName();\n                pluginVersion = viewerPlugin.getPluginVersion();\n                pluginURL = viewerPlugin.getPluginURL();\n            }\n\n            // Create dialog\n            aboutDialogCentererTable = document.createElement('div');\n            aboutDialogCentererTable.id = \"aboutDialogCentererTable\";\n            aboutDialogCentererCell = document.createElement('div');\n            aboutDialogCentererCell.id = \"aboutDialogCentererCell\";\n            aboutDialog = document.createElement('div');\n            aboutDialog.id = \"aboutDialog\";\n            aboutDialog.innerHTML =\n                \"<h1>ViewerJS</h1>\" +\n                \"<p>Open Source document viewer for webpages, built with HTML and JavaScript.</p>\" +\n                \"<p>Learn more and get your own copy on the <a href=\\\"http://viewerjs.org/\\\" target=\\\"_blank\\\">ViewerJS website</a>.</p>\" +\n                (viewerPlugin ? (\"<p>Using the <a href = \\\"\"+ pluginURL + \"\\\" target=\\\"_blank\\\">\" + pluginName + \"</a> \" +\n                                \"(<span id = \\\"pluginVersion\\\">\" + pluginVersion + \"</span>) \" +\n                                \"plugin to show you this document.</p>\")\n                             : \"\") +\n                \"<p>Version \" + version + \"</p>\" +\n                \"<p>Supported by <a href=\\\"https://nlnet.nl\\\" target=\\\"_blank\\\"><br><img src=\\\"images\\/nlnet.png\\\" width=\\\"160\\\" height=\\\"60\\\" alt=\\\"NLnet Foundation\\\"></a></p>\" +\n                \"<p>Made by <a href=\\\"http://kogmbh.com\\\" target=\\\"_blank\\\"><br><img src=\\\"images\\/kogmbh.png\\\" width=\\\"172\\\" height=\\\"40\\\" alt=\\\"KO GmbH\\\"></a></p>\" +\n                \"<button id = \\\"aboutDialogCloseButton\\\" class = \\\"toolbarButton textButton\\\">Close</button>\";\n            dialogOverlay.appendChild(aboutDialogCentererTable);\n            aboutDialogCentererTable.appendChild(aboutDialogCentererCell);\n            aboutDialogCentererCell.appendChild(aboutDialog);\n\n            // Create button to open dialog that says \"ViewerJS\"\n            aboutButton = document.createElement('button');\n            aboutButton.id = \"about\";\n            aboutButton.className = \"toolbarButton textButton about\";\n            aboutButton.title = \"About\";\n            aboutButton.innerHTML = \"ViewerJS\"\n            toolbarRight.appendChild(aboutButton);\n\n            // Attach events to the above\n            aboutButton.addEventListener('click', function () {\n                    showAboutDialog();\n            });\n            document.getElementById('aboutDialogCloseButton').addEventListener('click', function () {\n                    hideAboutDialog();\n            });\n\n        }\n\n        function showAboutDialog() {\n            dialogOverlay.style.display = \"block\";\n        }\n\n        function hideAboutDialog() {\n            dialogOverlay.style.display = \"none\";\n        }\n\n        function selectScaleOption(value) {\n            // Retrieve the options from the zoom level <select> element\n            var options = scaleSelector.options,\n                option,\n                predefinedValueFound = false,\n                i;\n\n            for (i = 0; i < options.length; i += 1) {\n                option = options[i];\n                if (option.value !== value) {\n                    option.selected = false;\n                    continue;\n                }\n                option.selected = true;\n                predefinedValueFound = true;\n            }\n            return predefinedValueFound;\n        }\n\n        function getPages() {\n            return viewerPlugin.getPages();\n        }\n\n        function setScale(val, resetAutoSettings) {\n            if (val === self.getZoomLevel()) {\n                return;\n            }\n\n            self.setZoomLevel(val);\n\n            var event = document.createEvent('UIEvents');\n            event.initUIEvent('scalechange', false, false, window, 0);\n            event.scale = val;\n            event.resetAutoSettings = resetAutoSettings;\n            window.dispatchEvent(event);\n        }\n\n        function onScroll() {\n            var pageNumber;\n\n            if (viewerPlugin.onScroll) {\n                viewerPlugin.onScroll();\n            }\n            if (viewerPlugin.getPageInView) {\n                pageNumber = viewerPlugin.getPageInView();\n                if (pageNumber) {\n                    currentPage = pageNumber;\n                    document.getElementById('pageNumber').value = pageNumber;\n                }\n            }\n        }\n\n        function delayedRefresh(milliseconds) {\n            window.clearTimeout(scaleChangeTimer);\n            scaleChangeTimer = window.setTimeout(function () {\n                onScroll();\n            }, milliseconds);\n        }\n\n        function parseScale(value, resetAutoSettings) {\n            var scale,\n                maxWidth,\n                maxHeight;\n\n            if (value === 'custom') {\n                scale = parseFloat(document.getElementById('customScaleOption').textContent) / 100;\n            } else {\n                scale = parseFloat(value);\n            }\n\n            if (scale) {\n                setScale(scale, true);\n                delayedRefresh(300);\n                return;\n            }\n\n            maxWidth = canvasContainer.clientWidth - kScrollbarPadding;\n            maxHeight = canvasContainer.clientHeight - kScrollbarPadding;\n\n            switch (value) {\n            case 'page-actual':\n                setScale(1, resetAutoSettings);\n                break;\n            case 'page-width':\n                viewerPlugin.fitToWidth(maxWidth);\n                break;\n            case 'page-height':\n                viewerPlugin.fitToHeight(maxHeight);\n                break;\n            case 'page-fit':\n                viewerPlugin.fitToPage(maxWidth, maxHeight);\n                break;\n            case 'auto':\n                if (viewerPlugin.isSlideshow()) {\n                    viewerPlugin.fitToPage(maxWidth + kScrollbarPadding, maxHeight + kScrollbarPadding);\n                } else {\n                    viewerPlugin.fitSmart(maxWidth);\n                }\n                break;\n            }\n\n            selectScaleOption(value);\n            delayedRefresh(300);\n        }\n\n        function readZoomParameter(zoom) {\n            var validZoomStrings = [\"auto\", \"page-actual\", \"page-width\"],\n                number;\n\n            if (validZoomStrings.indexOf(zoom) !== -1) {\n                return zoom;\n            }\n            number = parseFloat(zoom);\n            if (number && kMinScale <= number && number <= kMaxScale) {\n                return zoom;\n            }\n            return kDefaultScale;\n        }\n\n        function readStartPageParameter(startPage) {\n            var result = parseInt(startPage, 10);\n            return isNaN(result) ? 1 : result;\n        }\n\n        this.initialize = function () {\n            var initialScale,\n                element;\n\n            initialScale = readZoomParameter(parameters.zoom);\n\n            url = parameters.documentUrl;\n            document.title = parameters.title;\n            var documentName = document.getElementById('documentName');\n            documentName.innerHTML = \"\";\n            documentName.appendChild(documentName.ownerDocument.createTextNode(parameters.title));\n\n            viewerPlugin.onLoad = function () {\n                document.getElementById('pluginVersion').innerHTML = viewerPlugin.getPluginVersion();\n\n                if (viewerPlugin.isSlideshow()) {\n                    // Slideshow pages should be centered\n                    canvasContainer.classList.add(\"slideshow\");\n                    // Show page nav controls only for presentations\n                    pageSwitcher.style.visibility = 'visible';\n                } else {\n                    // For text documents, show the zoom widget.\n                    zoomWidget.style.visibility = 'visible';\n                    // Only show the page switcher widget if the plugin supports page numbers\n                    if (viewerPlugin.getPageInView) {\n                        pageSwitcher.style.visibility = 'visible';\n                    }\n                }\n\n                initialized = true;\n                pages = getPages();\n                document.getElementById('numPages').innerHTML = 'of ' + pages.length;\n\n\n                // Set default scale\n                parseScale(initialScale);\n\n\n                self.showPage(readStartPageParameter(parameters.startpage));\n\n                canvasContainer.onscroll = onScroll;\n                delayedRefresh();\n            };\n\n            viewerPlugin.initialize(canvasContainer, url);\n        };\n\n        /**\n         * Shows the 'n'th page. If n is larger than the page count,\n         * shows the last page. If n is less than 1, shows the first page.\n         * @return {undefined}\n         */\n        this.showPage = function (n) {\n            if (n <= 0) {\n                n = 1;\n            } else if (n > pages.length) {\n                n = pages.length;\n            }\n\n            viewerPlugin.showPage(n);\n\n            currentPage = n;\n            document.getElementById('pageNumber').value = currentPage;\n        };\n\n        /**\n         * Shows the next page. If there is no subsequent page, does nothing.\n         * @return {undefined}\n         */\n        this.showNextPage = function () {\n            self.showPage(currentPage + 1);\n        };\n\n        /**\n         * Shows the previous page. If there is no previous page, does nothing.\n         * @return {undefined}\n         */\n        this.showPreviousPage = function () {\n            self.showPage(currentPage - 1);\n        };\n\n        /**\n         * Attempts to 'download' the file.\n         * @return {undefined}\n         */\n        this.download = function () {\n            var documentUrl = url.split('#')[0];\n            documentUrl += '#viewer.action=download';\n            window.open(documentUrl, '_parent');\n        };\n\n        /**\n         * Toggles the fullscreen state of the viewer\n         * @return {undefined}\n         */\n        this.toggleFullScreen = function () {\n            var elem = viewerElement;\n            if (!isFullScreen) {\n                if (elem.requestFullscreen) {\n                    elem.requestFullscreen();\n                } else if (elem.mozRequestFullScreen) {\n                    elem.mozRequestFullScreen();\n                } else if (elem.webkitRequestFullscreen) {\n                    elem.webkitRequestFullscreen();\n                } else if (elem.webkitRequestFullScreen) {\n                    elem.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n                } else if (elem.msRequestFullscreen) {\n                    elem.msRequestFullscreen();\n                }\n            } else {\n                if (document.exitFullscreen) {\n                    document.exitFullscreen();\n                } else if (document.cancelFullScreen) {\n                    document.cancelFullScreen();\n                } else if (document.mozCancelFullScreen) {\n                    document.mozCancelFullScreen();\n                } else if (document.webkitExitFullscreen) {\n                    document.webkitExitFullscreen();\n                } else if (document.webkitCancelFullScreen) {\n                    document.webkitCancelFullScreen();\n                } else if (document.msExitFullscreen) {\n                    document.msExitFullscreen();\n                }\n            }\n        };\n\n        /**\n         * Toggles the presentation mode of the viewer.\n         * Presentation mode involves fullscreen + hidden UI controls\n         */\n        this.togglePresentationMode = function () {\n            var overlayCloseButton = document.getElementById('overlayCloseButton');\n\n            if (!presentationMode) {\n                titlebar.style.display = toolbar.style.display = 'none';\n                overlayCloseButton.style.display = 'block';\n                canvasContainer.classList.add('presentationMode');\n                canvasContainer.onmousedown = function (event) {\n                    event.preventDefault();\n                };\n                canvasContainer.oncontextmenu = function (event) {\n                    event.preventDefault();\n                };\n                canvasContainer.onmouseup = function (event) {\n                    event.preventDefault();\n                    if (event.which === 1) {\n                        self.showNextPage();\n                    } else {\n                        self.showPreviousPage();\n                    }\n                };\n                parseScale('page-fit');\n            } else {\n                if (isBlankedOut()) {\n                    leaveBlankOut();\n                }\n                titlebar.style.display = toolbar.style.display = 'block';\n                overlayCloseButton.style.display = 'none';\n                canvasContainer.classList.remove('presentationMode');\n                canvasContainer.onmouseup = function () {};\n                canvasContainer.oncontextmenu = function () {};\n                canvasContainer.onmousedown = function () {};\n                parseScale('auto');\n            }\n\n            presentationMode = !presentationMode;\n        };\n\n        /**\n         * Gets the zoom level of the document\n         * @return {!number}\n         */\n        this.getZoomLevel = function () {\n            return viewerPlugin.getZoomLevel();\n        };\n\n        /**\n         * Set the zoom level of the document\n         * @param {!number} value\n         * @return {undefined}\n         */\n        this.setZoomLevel = function (value) {\n            viewerPlugin.setZoomLevel(value);\n        };\n\n        /**\n         * Zoom out by 10 %\n         * @return {undefined}\n         */\n        this.zoomOut = function () {\n            // 10 % decrement\n            var newScale = (self.getZoomLevel() / kDefaultScaleDelta).toFixed(2);\n            newScale = Math.max(kMinScale, newScale);\n            parseScale(newScale, true);\n        };\n\n        /**\n         * Zoom in by 10%\n         * @return {undefined}\n         */\n        this.zoomIn = function () {\n            // 10 % increment\n            var newScale = (self.getZoomLevel() * kDefaultScaleDelta).toFixed(2);\n            newScale = Math.min(kMaxScale, newScale);\n            parseScale(newScale, true);\n        };\n\n        function cancelPresentationMode() {\n            if (presentationMode && !isFullScreen) {\n                self.togglePresentationMode();\n            }\n        }\n\n        function handleFullScreenChange() {\n            isFullScreen = !isFullScreen;\n            cancelPresentationMode();\n        }\n\n        function showOverlayNavigator() {\n            if (presentationMode || viewerPlugin.isSlideshow()) {\n                overlayNavigator.className = 'viewer-touched';\n                window.clearTimeout(touchTimer);\n                touchTimer = window.setTimeout(function () {\n                    overlayNavigator.className = '';\n                }, UI_FADE_DURATION);\n            }\n        }\n\n        /**\n         * @param {!boolean} timed Fade after a while\n         */\n        function showToolbars() {\n            titlebar.classList.add('viewer-touched');\n            toolbar.classList.add('viewer-touched');\n            window.clearTimeout(toolbarTouchTimer);\n            toolbarTouchTimer = window.setTimeout(function () {\n                hideToolbars();\n            }, UI_FADE_DURATION);\n        }\n\n        function hideToolbars() {\n            titlebar.classList.remove('viewer-touched');\n            toolbar.classList.remove('viewer-touched');\n        }\n\n        function toggleToolbars() {\n            if (titlebar.classList.contains('viewer-touched')) {\n                hideToolbars();\n            } else {\n                showToolbars();\n            }\n        }\n\n        function blankOut(value) {\n            blanked.style.display = 'block';\n            blanked.style.backgroundColor = value;\n            hideToolbars();\n        }\n\n        function leaveBlankOut() {\n            blanked.style.display = 'none';\n            toggleToolbars();\n        }\n\n        function setButtonClickHandler(buttonId, handler) {\n            var button = document.getElementById(buttonId);\n\n            button.addEventListener('click', function () {\n                handler();\n                button.blur();\n            });\n        }\n\n        function init() {\n\n            initializeAboutInformation();\n\n            if (viewerPlugin) {\n                self.initialize();\n\n                if (!(document.exitFullscreen || document.cancelFullScreen || document.mozCancelFullScreen || document.webkitExitFullscreen || document.webkitCancelFullScreen || document.msExitFullscreen)) {\n                    document.getElementById('fullscreen').style.visibility = 'hidden';\n                    document.getElementById('presentation').style.visibility = 'hidden';\n                }\n\n                setButtonClickHandler('overlayCloseButton', self.toggleFullScreen);\n                setButtonClickHandler('fullscreen', self.toggleFullScreen);\n                setButtonClickHandler('presentation', function () {\n                    if (!isFullScreen) {\n                        self.toggleFullScreen();\n                    }\n                    self.togglePresentationMode();\n                });\n\n                document.addEventListener('fullscreenchange', handleFullScreenChange);\n                document.addEventListener('webkitfullscreenchange', handleFullScreenChange);\n                document.addEventListener('mozfullscreenchange', handleFullScreenChange);\n                document.addEventListener('MSFullscreenChange', handleFullScreenChange);\n\n                setButtonClickHandler('download', self.download);\n\n                setButtonClickHandler('zoomOut', self.zoomOut);\n                setButtonClickHandler('zoomIn', self.zoomIn);\n\n                setButtonClickHandler('previous', self.showPreviousPage);\n                setButtonClickHandler('next', self.showNextPage);\n\n                setButtonClickHandler('previousPage', self.showPreviousPage);\n                setButtonClickHandler('nextPage', self.showNextPage);\n\n                document.getElementById('pageNumber').addEventListener('change', function () {\n                    self.showPage(this.value);\n                });\n\n                document.getElementById('scaleSelect').addEventListener('change', function () {\n                    parseScale(this.value);\n                });\n\n                canvasContainer.addEventListener('click', showOverlayNavigator);\n                overlayNavigator.addEventListener('click', showOverlayNavigator);\n                canvasContainer.addEventListener('click', toggleToolbars);\n                titlebar.addEventListener('click', showToolbars);\n                toolbar.addEventListener('click', showToolbars);\n\n                window.addEventListener('scalechange', function (evt) {\n                    var customScaleOption = document.getElementById('customScaleOption'),\n                        predefinedValueFound = selectScaleOption(String(evt.scale));\n\n                    customScaleOption.selected = false;\n\n                    if (!predefinedValueFound) {\n                        customScaleOption.textContent = Math.round(evt.scale * 10000) / 100 + '%';\n                        customScaleOption.selected = true;\n                    }\n                }, true);\n\n                window.addEventListener('resize', function (evt) {\n                    if (initialized &&\n                              (document.getElementById('pageWidthOption').selected ||\n                              document.getElementById('pageAutoOption').selected)) {\n                        parseScale(document.getElementById('scaleSelect').value);\n                    }\n                    showOverlayNavigator();\n                });\n\n                window.addEventListener('keydown', function (evt) {\n                    var key = evt.keyCode,\n                        shiftKey = evt.shiftKey;\n\n                    // blanked-out mode?\n                    if (isBlankedOut()) {\n                        switch (key) {\n                        case 16: // Shift\n                        case 17: // Ctrl\n                        case 18: // Alt\n                        case 91: // LeftMeta\n                        case 93: // RightMeta\n                        case 224: // MetaInMozilla\n                        case 225: // AltGr\n                            // ignore modifier keys alone\n                            break;\n                        default:\n                            leaveBlankOut();\n                            break;\n                        }\n                    } else {\n                        switch (key) {\n                        case 8: // backspace\n                        case 33: // pageUp\n                        case 37: // left arrow\n                        case 38: // up arrow\n                        case 80: // key 'p'\n                            self.showPreviousPage();\n                            break;\n                        case 13: // enter\n                        case 34: // pageDown\n                        case 39: // right arrow\n                        case 40: // down arrow\n                        case 78: // key 'n'\n                            self.showNextPage();\n                            break;\n                        case 32: // space\n                            shiftKey ? self.showPreviousPage() : self.showNextPage();\n                            break;\n                        case 66:  // key 'b' blanks screen (to black) or returns to the document\n                        case 190: // and so does the key '.' (dot)\n                            if (presentationMode) {\n                                blankOut('#000');\n                            }\n                            break;\n                        case 87:  // key 'w' blanks page (to white) or returns to the document\n                        case 188: // and so does the key ',' (comma)\n                            if (presentationMode) {\n                                blankOut('#FFF');\n                            }\n                            break;\n                        case 36: // key 'Home' goes to first page\n                            self.showPage(1);\n                            break;\n                        case 35: // key 'End' goes to last page\n                            self.showPage(pages.length);\n                            break;\n                        }\n                    }\n                });\n            }\n        }\n\n        init();\n    }\n\n    return viewerjs.Viewer = Viewer;\n});"]}